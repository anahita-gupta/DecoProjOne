// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserTenantAPI.Data;

#nullable disable

namespace DECOCRUDBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240527055641_UpdateUserTenantRelationship")]
    partial class UpdateUserTenantRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("UserTenantAPI.Models.Tenant", b =>
                {
                    b.Property<int>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenantName")
                        .HasColumnType("TEXT");

                    b.HasKey("TenantId");

                    b.ToTable("TenantItems");
                });

            modelBuilder.Entity("UserTenantAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TenantKey")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TenantKey");

                    b.ToTable("UserItems");
                });

            modelBuilder.Entity("UserTenantAPI.Models.User", b =>
                {
                    b.HasOne("UserTenantAPI.Models.Tenant", "Tenant")
                        .WithMany("Users")
                        .HasForeignKey("TenantKey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("UserTenantAPI.Models.Tenant", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
